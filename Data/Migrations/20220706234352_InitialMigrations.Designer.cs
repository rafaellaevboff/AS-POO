// <auto-generated />
using Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20220706234352_InitialMigrations")]
    partial class InitialMigrations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.3");

            modelBuilder.Entity("Domain.Entities.Aluno", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("endereco");

                    b.Property<int>("EscolaID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("escolaId");

                    b.Property<int>("MotoristaID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("motoristaId");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("nome");

                    b.Property<int>("ResponsavelID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("responsavelId");

                    b.Property<int>("ServicoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("EscolaID");

                    b.HasIndex("MotoristaID");

                    b.HasIndex("ResponsavelID");

                    b.ToTable("aluno", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Escola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("escola", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Motorista", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("cpf");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(155)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("email");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("nome");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("telefone");

                    b.Property<int>("VeiculoID")
                        .HasColumnType("Integer")
                        .HasColumnName("veiculoId");

                    b.HasKey("Id");

                    b.HasIndex("VeiculoID");

                    b.ToTable("motorista", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Responsavel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("Cpf")
                        .HasMaxLength(18)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("cpf");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("endereco");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("nome");

                    b.HasKey("Id");

                    b.ToTable("responsavel", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Servico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("AlunoID")
                        .HasColumnType("INTEGER")
                        .HasColumnName("alunoId");

                    b.Property<string>("Cnpj")
                        .HasColumnType("TEXT");

                    b.Property<int>("MotoristaID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ResponsavelID")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AlunoID")
                        .IsUnique();

                    b.HasIndex("MotoristaID");

                    b.HasIndex("ResponsavelID");

                    b.ToTable("servico", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("id");

                    b.Property<int>("Ano")
                        .HasMaxLength(10)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("ano");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("cor");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("nome");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("placa");

                    b.HasKey("Id");

                    b.ToTable("veiculo", (string)null);
                });

            modelBuilder.Entity("Domain.Entities.Aluno", b =>
                {
                    b.HasOne("Domain.Entities.Escola", "Escola")
                        .WithMany("Alunos")
                        .HasForeignKey("EscolaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Aluno_Escola");

                    b.HasOne("Domain.Entities.Motorista", "Motorista")
                        .WithMany("Alunos")
                        .HasForeignKey("MotoristaID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Aluno_Motorista");

                    b.HasOne("Domain.Entities.Responsavel", "Responsavel")
                        .WithMany("Alunos")
                        .HasForeignKey("ResponsavelID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Aluno_Responsavel");

                    b.Navigation("Escola");

                    b.Navigation("Motorista");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("Domain.Entities.Motorista", b =>
                {
                    b.HasOne("Domain.Entities.Veiculo", "Veiculo")
                        .WithMany("Motoristas")
                        .HasForeignKey("VeiculoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Motorista_Veiculo");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Domain.Entities.Servico", b =>
                {
                    b.HasOne("Domain.Entities.Aluno", "Aluno")
                        .WithOne("Servico")
                        .HasForeignKey("Domain.Entities.Servico", "AlunoID")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Aluno_Servico");

                    b.HasOne("Domain.Entities.Motorista", "Motorista")
                        .WithMany("Servicos")
                        .HasForeignKey("MotoristaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Responsavel", "Responsavel")
                        .WithMany("Servicos")
                        .HasForeignKey("ResponsavelID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Aluno");

                    b.Navigation("Motorista");

                    b.Navigation("Responsavel");
                });

            modelBuilder.Entity("Domain.Entities.Aluno", b =>
                {
                    b.Navigation("Servico");
                });

            modelBuilder.Entity("Domain.Entities.Escola", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("Domain.Entities.Motorista", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("Domain.Entities.Responsavel", b =>
                {
                    b.Navigation("Alunos");

                    b.Navigation("Servicos");
                });

            modelBuilder.Entity("Domain.Entities.Veiculo", b =>
                {
                    b.Navigation("Motoristas");
                });
#pragma warning restore 612, 618
        }
    }
}
